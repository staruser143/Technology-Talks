# Generate an RSA private key
resource "tls_private_key" "salesforce_jwt_key" {
  algorithm = "RSA"
  rsa_bits  = 2048 # Or 4096 for stronger security
}

# Generate a self-signed X.509 certificate
resource "tls_self_signed_cert" "salesforce_jwt_cert" {
  private_key_pem = tls_private_key.salesforce_jwt_key.private_key_pem

  subject {
    common_name  = "salesforce-glue-integration"
    organization = "YourOrganization"
    # Add other subject fields as desired for better identification
    # country        = "IN"
    # province       = "Tamil Nadu"
    # locality       = "Padur"
    # organizational_unit = "IT"
  }

  validity_period_hours = 87600 # 10 years (8760 hours per year * 10)
  is_ca_certificate     = false # This is not a CA certificate
  
  # Crucial for Salesforce: define allowed usages
  allowed_uses = [
    "digital_signature",
    "key_encipherment",
  ]
}

# Store the private key in AWS Secrets Manager
resource "aws_secretsmanager_secret" "salesforce_private_key_secret" {
  name        = "salesforce-jwt-private-key-managed-by-tf"
  description = "Salesforce JWT Bearer Flow Private Key generated by Terraform"
}

resource "aws_secretsmanager_secret_version" "salesforce_private_key_version" {
  secret_id     = aws_secretsmanager_secret.salesforce_private_key_secret.id
  secret_string = tls_private_key.salesforce_jwt_key.private_key_pem
}

# (Optional) Output the certificate PEM for manual upload to Salesforce
output "salesforce_certificate_pem" {
  value       = tls_self_signed_cert.salesforce_jwt_cert.cert_pem
  description = "The generated X.509 certificate (PEM format) to upload to Salesforce Connected App"
  sensitive   = true # Although public, mark as sensitive to avoid display in plan/apply by default
}

# (Optional) Save the certificate to a local file
resource "local_file" "salesforce_certificate_file" {
  content  = tls_self_signed_cert.salesforce_jwt_cert.cert_pem
  filename = "salesforce_certificate.crt"
  file_permission = "0644" # Read-only for owner, read for others
}
